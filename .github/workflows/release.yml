name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  GO_VERSION: "1.25"
  BINARY_NAME: mocker

jobs:
  build:
    name: Build archives
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        run: go test ./...

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION="${GITHUB_REF_NAME}"
          COMMIT="$(git rev-parse --short HEAD)"
          DATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          OUTPUT="dist/${{ env.BINARY_NAME }}-${GOOS}-${GOARCH}"
          mkdir -p dist
          CGO_ENABLED=0 go build -ldflags "-s -w -X 'main.version=${VERSION}' -X 'main.commit=${COMMIT}' -X 'main.date=${DATE}'" -o "${OUTPUT}" ./cmd/mocker
          ARCHIVE="dist/${{ env.BINARY_NAME }}-${VERSION}-${GOOS}-${GOARCH}.tar.gz"
          tar -czf "${ARCHIVE}" -C dist "${{ env.BINARY_NAME }}-${GOOS}-${GOARCH}"
          sha256sum "${ARCHIVE}" > "${ARCHIVE}.sha256"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            dist/${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
            dist/${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz.sha256

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
